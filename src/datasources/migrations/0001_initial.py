# Generated by Django 4.2 on 2023-04-24 13:34

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pathogen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=128, unique=True)),
                ('base_name', models.CharField(help_text='Signal BaseName', max_length=128, unique=True)),
                ('base_is_other', models.BooleanField(default=False, help_text='Base is other')),
                ('compute_from_base', models.BooleanField(default=False, help_text='Compute From Base')),
                ('active', models.BooleanField(default=False, help_text='Active')),
                ('short_description', models.TextField(blank=True, help_text='Short Description', max_length=500, null=True)),
                ('description', models.TextField(blank=True, help_text='Description', max_length=1000, null=True)),
                ('time_type', models.CharField(choices=[('day', 'Day'), ('date', 'Date')], help_text='Time type', max_length=128)),
                ('time_label', models.CharField(choices=[('day', 'Day'), ('date', 'Date')], help_text='Time label', max_length=128)),
                ('format', models.CharField(choices=[('raw', 'Raw'), ('percent', 'Percent'), ('fraction', 'Fraction'), ('count', 'Count'), ('per100k', 'Per 100K')], help_text='Format', max_length=128)),
                ('category', models.CharField(choices=[('public', 'Public'), ('early', 'Early'), ('cases_testing', 'Case testing'), ('late', 'Late'), ('other', 'Other')], help_text='Format', max_length=128)),
                ('high_values_are', models.CharField(choices=[('bad', 'Bad'), ('good', 'Good'), ('neutral', 'Neutral')], help_text='High values are', max_length=128)),
                ('link', models.URLField(help_text='Link', max_length=256)),
                ('available_geography', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('county', 'county'), ('hhs', 'hhs'), ('hrr', 'hrr'), ('msa', 'msa'), ('nation', 'nation'), ('state', 'state'), ('dma', 'dma')], max_length=128), default=list, help_text='Available geography', size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SignalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceSubdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=128, unique=True)),
                ('db_source', models.CharField(help_text='DB Source', max_length=128, unique=True)),
                ('description', models.TextField(blank=True, help_text='Source description', max_length=1000, null=True)),
                ('source_license', models.CharField(help_text='License', max_length=128)),
                ('dua', models.URLField(blank=True, help_text='DUA', max_length=256, null=True)),
                ('pathogen', models.ForeignKey(help_text='Pathogen/Disease Area', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pathogen', to='datasources.pathogen')),
                ('reference_signal', models.ForeignKey(help_text='Reference Signal', on_delete=django.db.models.deletion.PROTECT, related_name='data_sources', to='datasources.signal')),
                ('source_subdivision', models.ForeignKey(help_text='Source Subdivision', on_delete=django.db.models.deletion.PROTECT, to='datasources.sourcesubdivision')),
            ],
        ),
    ]
